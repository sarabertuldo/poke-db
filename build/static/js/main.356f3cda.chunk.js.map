{"version":3,"sources":["redux/actions/CatchActions.js","redux/actions/UserActions.js","redux/actions/QueryActions.js","redux/actions/TypesActions.js","redux/reducers/QueryReducer.js","redux/reducers/UserReducer.js","redux/reducers/TypesReducer.js","redux/reducers/index.js","redux/reducers/CatchReducer.js","redux/Store.js","components/DisplayPage.js","components/DisplayTypes.js","shared/PokeContext.js","components/SearchPage.js","components/CatchPage.js","components/RandomPage.js","components/LinksPage.js","components/LoginPage.js","components/SignupPage.js","redux/selectors/UserSelectors.js","components/TextScroller.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_CATCH","DELETE_CATCH","addCatch","caught","type","deleteCatch","dex","SET_USER","CLEAR_USER","setUser","user","username","clearUser","SET_QUERY","SET_TYPES","initialState","role","id","typesReducer","state","action","search","rootReducer","combineReducers","query","filter","val","types","createStore","DisplayPage","pkmn","isCaught","className","name","src","img","onClick","DisplayTypes","props","console","log","useState","typeurl","favorites","mapDispatchToProps","setQuery","setTypes","connect","globalState","setName","setType","error","setError","favePkmn","useMemo","map","url","a","nameLC","toLowerCase","fetch","response","json","resPkmn","sprites","front_default","typeLC","resPokeTypes","pokemon","onChange","e","target","value","placeholder","getByName","getByType","length","includes","t","v","RandomPage","randomPkmn","setRandomPkmn","useEffect","getRandomPkmn","axios","get","min","Math","ceil","max","floor","random","pokeId","then","data","LinksPage","href","history","useHistory","setUsername","password","setPassword","post","push","login","style","color","htmlFor","signup","usernameSelector","TextScroller","text","key","setKey","scrolling","useSpring","from","transform","to","config","duration","reset","onRest","div","App","useSelectors","useActionCreators","setUserInState","success","path","component","LoginPage","SignupPage","SearchPage","CatchPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.356f3cda.chunk.js","sourcesContent":["export const ADD_CATCH = \"Add Catch\";\nexport const DELETE_CATCH = \"Delete Catch\";\n\nexport function addCatch(caught) {\n  return { type: ADD_CATCH, caught: caught };\n}\n\nexport function deleteCatch(dex) {\n  return { type: DELETE_CATCH, dex: dex };\n}\n","export const SET_USER = \"Set User\";\nexport const CLEAR_USER = \"Clear User\";\n\nexport function setUser(user) {\n  return { type: SET_USER, username: user };\n}\n\nexport function clearUser() {\n  return { type: CLEAR_USER };\n}\n","export const SET_QUERY = \"Set Query\";\n\nexport function setQuery(query) {\n  return { type: SET_QUERY, query: { ...query } };\n}\n","export const SET_TYPES = \"Set Types\";\n\nexport function setTypes(types) {\n  return { type: SET_TYPES, search: types };\n}\n","import { SET_QUERY } from \"../actions\";\n\nconst initialState = [];\n\nexport default function queryReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_QUERY:\n      return { ...action.query };\n    default:\n      return state;\n  }\n}\n\n// rxreducer\n","import { CLEAR_USER, SET_USER } from \"../actions\";\n\nconst initialState = {\n  username: \"\",\n  role: null,\n  id: null,\n};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, username: action.username };\n    case CLEAR_USER:\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n","import { SET_TYPES } from \"../actions\";\n\nfunction typesReducer(state = [], action) {\n  switch (action.type) {\n    case SET_TYPES:\n      return [...action.search];\n    default:\n      return state;\n  }\n}\nexport default typesReducer;\n","import catchReducer from \"./CatchReducer\";\nimport queryReducer from \"./QueryReducer\";\nimport userReducer from \"./UserReducer\";\nimport typesReducer from \"./TypesReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  query: queryReducer,\n  user: userReducer,\n  caught: catchReducer,\n  types: typesReducer,\n});\n\nexport default rootReducer;\n","import { ADD_CATCH, DELETE_CATCH } from \"../actions\";\n\nexport default function catchReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_CATCH:\n      return [...state, action.caught];\n    case DELETE_CATCH:\n      return state.filter((val) => val.dex !== action.dex);\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import \"./components.css\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nconst DisplayPage = ({ pkmn, isCaught, addCatch, deleteCatch }) => {\n  return (\n    <>\n      <div className=\"results-box\">\n        <div className=\"box\">\n          <h3>{pkmn.name}</h3>\n          <div className=\"pokedex-box\">Pokedex No. {pkmn.dex}</div>\n          <img src={pkmn.img} />\n          <div className=\"type-box \">{pkmn.type}</div>\n        </div>\n\n        {!isCaught && <button onClick={() => addCatch(pkmn)}> Catch</button>}\n        {isCaught && (\n          <button onClick={() => deleteCatch(pkmn.dex)}> Release</button>\n        )}\n      </div>\n    </>\n  );\n};\nexport default DisplayPage;\n","import \"./components.css\";\nimport React, { useState } from \"react\";\n\nfunction DisplayTypes({ props, types, isCaught, addCatch, deleteCatch }) {\n  console.log(props);\n  const [error, setError] = useState(\"\");\n\n  // async function getPkmnInfo(pkmninfo) {\n  //   try {\n  //     setError(\"\");\n  //     let response = await fetch(`${props.pkmn.typeurl}`);\n  //     let json = await response.json();\n  //     let typeInfo = {\n  //       dex: json.id,\n  //       name: json.name,\n  //       img: json.sprites.front_default,\n  //       type: json.types[0].type.name,\n  //     };\n  //     console.log(pkmninfo);\n  //     props.getPkmnInfo(pkmninfo);\n  //   } catch (e) {\n  //     setError(\"Invalid type\");\n  //     props.getPkmnInfo([]);\n  //   }\n  // }\n\n  return (\n    <>\n      <div>\n        <h3>{props.pkmn.name}</h3>\n        {props.pkmn.typeurl}\n        {/* {typeInfo.dex} */}\n\n        {/* <div className=\"results-box\">\n        <div className=\"box\">\n          <h3>{pkmn.name}</h3>\n          <div className=\"pokedex-box\">Pokedex No. {pkmn.dex}</div>\n          <img src={pkmn.img} />\n          <div className=\"type-box \">{pkmn.type}</div>\n        </div>\n\n        {!isCaught && <button onClick={() => addCatch(pkmn)}> Catch</button>}\n        {isCaught && (\n          <button onClick={() => deleteCatch(pkmn.dex)}> Release</button>\n        )}\n      </div> */}\n      </div>\n    </>\n  );\n}\n\nexport default DisplayTypes;\n","import React from \"react\";\nimport { useArray } from \"../hooks/useArray\";\n// import { initialState } from \"react\";\n\nexport const initialState = {\n  favorites: [],\n  search: [],\n  user: {\n    username: \"\",\n    id: null,\n    role: \"\",\n  },\n};\n\nexport const PokeContext = React.createContext(null);\n\n// const initialState = [\n//   { id: 1, caught: true, name: \"Bulbasaur\" },\n//   { id: 2, caught: false, name: \"Ivysaur\" },\n//   { id: 3, caught: true, name: \"Venusaur\" },\n//   { id: 4, caught: false, name: \"Charmander\" },\n//   { id: 5, caught: false, name: \"Charmeleon\" },\n//   { id: 6, caught: false, name: \"Charizard\" },\n//   { id: 7, caught: true, name: \"Squirtle\" },\n//   { id: 8, caught: false, name: \"Wartortle\" },\n//   { id: 9, caught: false, name: \"Blastoise\" },\n// ];\n\n// export const PokeContext = React.createContext(null);\n\n// const PokeProvider = (props) => {\n//   const pkmn = useArray(initialState);\n//   return (\n//     // props.children will have access to Provider\n//     <PokeContext.Provider value={pkmn}>{props.children}</PokeContext.Provider>\n//   );\n// };\n\n// export default PokeProvider;\n","import React, { useState, useMemo, useContext } from \"react\";\nimport \"./components.css\";\nimport DisplayPage from \"./DisplayPage\";\nimport DisplayTypes from \"./DisplayTypes\";\nimport { PokeContext } from \"../shared/PokeContext\";\nimport { setQuery } from \"../redux/actions/QueryActions\";\nimport { setTypes } from \"../redux/actions/TypesActions\";\nimport { connect } from \"react-redux\";\nimport { addCatch, deleteCatch } from \"../redux/actions\";\nimport axios from \"axios\";\n\nfunction SearchPage(props) {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [caught, setCaught] = useState([]);\n\n  // const pkmn = useContext(PokeContext);\n\n  // useEffect(() => {\n  //   let ids = props.caught.map((pkmn) => pkmn.id);\n  //   setCaught(ids);\n  // }, [props.caught]);\n\n  const favePkmn = useMemo(() => {\n    return props.caught.map((pkmn) => pkmn.dex);\n  }, [props.caught]);\n\n  const url = `https://pokeapi.co/api/v2/`;\n\n  async function getByName(name) {\n    try {\n      setError(\"\");\n      let nameLC = name.toLowerCase();\n      let response = await fetch(`${url}pokemon/${nameLC}`);\n      let json = await response.json();\n\n      let resPkmn = {\n        dex: json.id,\n        name: json.name,\n        img: json.sprites.front_default,\n        type: json.types[0].type.name,\n        // typetwo: json.types[1].type.name,\n      };\n      // let type = resPkmn.json.types.map((type) => type.type.name);\n      props.setQuery(resPkmn);\n    } catch (e) {\n      setError(\"Invalid name\");\n      props.setQuery([]);\n    }\n  }\n\n  async function getByType(type) {\n    try {\n      setError(\"\");\n      let typeLC = type.toLowerCase();\n      let response = await fetch(`${url}type/${typeLC}`);\n      let json = await response.json();\n      // console.log(json);\n      let resPokeTypes = json.pokemon.map((pokemon) => {\n        return { name: pokemon.pokemon.name };\n      });\n      // let ptype = json.pokemon[0].pokemon.name;\n      console.log(resPokeTypes);\n      props.setTypes(resPokeTypes);\n    } catch (e) {\n      setError(\"Invalid type\");\n      props.setTypes([]);\n    }\n  }\n\n  return (\n    <>\n      <h1>Search</h1>\n      <div>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Search By Name\"\n          value={name}\n        />\n        <button className=\"button\" onClick={() => getByName(name)}>\n          Search Name\n        </button>\n        <p className=\"text-example\">\n          (Example: Pikachu, Jigglypuff, Greninja, etc.\n        </p>\n      </div>\n\n      <div>\n        <input\n          id=\"type\"\n          type=\"text\"\n          onChange={(e) => setType(e.target.value)}\n          placeholder=\"Search By Type\"\n          value={type}\n        />\n        <button className=\"button\" onClick={() => getByType(type)}>\n          Search Type\n        </button>\n        <p className=\"text-example\">(Example: Water, Flying, Psychic, etc.)</p>\n      </div>\n\n      <div>\n        {error.length > 0 && <h1>{error}</h1>}\n        {error.length === 0 && props.pkmn.name && (\n          <DisplayPage\n            pkmn={props.pkmn}\n            dex={props.pkmn.dex}\n            img={props.pkmn.img}\n            type={props.pkmn.type}\n            isCaught={favePkmn.includes(props.pkmn.id)}\n            deleteCatch={props.deleteCatch}\n            addCatch={props.addCatch}\n          />\n        )}\n      </div>\n      <div>\n        {props.types.map((t) => {\n          return (\n            <div>\n              <DisplayTypes pkmn={t}></DisplayTypes>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nconst mapDispatchToProps = {\n  setQuery,\n  setTypes,\n  addCatch,\n  deleteCatch,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    globalState: state,\n    pkmn: state.query,\n    types: state.types,\n    caught: state.caught,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n// async function getTypeInfo(typeinfo){\n//   try {\n//     setError(\"\");\n//     let tresponse = await fetch(`${typeurl}`)\n//     let tjson = await tresponse.tjson();\n//     let typePkmn = {\n//       dex: tjson.id,\n//       name: tjson.name,\n//       img: tjson.sprites.front_default,\n//       type: tjson.types[0].type.name,\n//     }}\n//     catch (e) {\n//       setError(\"Invalid type\");\n//       props\n//     }\n//   }\n\n//\n","import \"./components.css\";\nimport React, { useState } from \"react\";\nimport { addCatch, deleteCatch } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport DisplayPage from \"./DisplayPage\";\n\nconst CatchPage = (props) => {\n  return (\n    <>\n      <h1>Box</h1>\n      {/* selected pokemon will be added here */}\n      {props.caught.map((v) => (\n        <DisplayPage\n          key={v.dex}\n          pkmn={v}\n          isCaught={true}\n          deleteCatch={props.deleteCatch}\n        />\n      ))}\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  addCatch,\n  deleteCatch,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    caught: state.caught,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CatchPage);\n","import \"./components.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction RandomPage() {\n  const [randomPkmn, setRandomPkmn] = useState({});\n\n  useEffect(() => {\n    getRandomPkmn();\n  }, []);\n\n  const pokeId = () => {\n    const min = Math.ceil(1);\n    const max = Math.floor(898);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const getRandomPkmn = () => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/` + pokeId())\n      .then((response) => {\n        console.log(response.data);\n        setRandomPkmn(response.data);\n      });\n  };\n\n  return (\n    <>\n      <h1>Random Encounter</h1>\n      <div className=\"random-box\">\n        <h3>{randomPkmn.name}</h3>\n        <h4>#{randomPkmn.id}</h4>\n        <img\n          src={\n            `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/` +\n            randomPkmn.id +\n            `.png`\n          }\n        />\n        <div>\n          <img\n            src={\n              `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/` +\n              +randomPkmn.id +\n              `.png`\n            }\n          />\n          <img\n            src={\n              `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/` +\n              +randomPkmn.id +\n              `.png`\n            }\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RandomPage;\n","import React from \"react\";\nimport \"./components.css\";\n\nfunction LinksPage() {\n  return (\n    <>\n      <h1>Links</h1>\n      <li>\n        <a href=\"http://bulbapedia.bulbagarden.net\">Bulbapedia</a>\n      </li>\n      <li>\n        <a href=\"http://pokeapi.co/\">Poke API</a>\n      </li>\n    </>\n  );\n}\n\nexport default LinksPage;\n","import React, { useState } from \"react\";\nimport \"./components.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"../redux/actions\";\nimport axios from \"axios\";\n\nconst LoginPage = (props) => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  async function login() {\n    setError(\"\");\n    console.log(username, password);\n    if (\n      username.length < 8 ||\n      username.length > 16 ||\n      password.length > 20 ||\n      password.length < 8\n    ) {\n      setError(\n        \"Username must be between 8 and 16 characters. Password must be between 8 and 20 characters.\"\n      );\n      return;\n    }\n    try {\n      // try to do the fetch to the appropriate endpoint\n      // post username and password in a body\n      // uncomment 32, 33, 35, 37, 40, 41, 43\n      // const response = await fetch(\"/users/login\", {\n      //   method: \"POST\",\n      // information about the request being sent\n      // headers: {\n      //   \"Content-Type\": \"application/json\",\n      // },\n      // username because of Line 9, password because of Line 10\n      // sending data as a string/making an object a string, looks like a JSON so turn it back into an object\n      //   body: JSON.stringify({ username: username, password: password }),\n      // });\n      // check the response\n      // const json = await response.json();\n      // handle response correctly\n      // comment 46-49\n      const json = axios.post(\"users/login\", {\n        username: username,\n        password: password,\n      });\n      // add .data after each json (L49, 50, 52) (ex. json.data.data.username)\n      if (json.error) {\n        setError(json.error);\n      } else {\n        props.setUser(json.data.username);\n        history.push(\"/search\");\n      }\n    } catch (error) {\n      setError(\"Something went wrong, please try again later.\");\n    }\n  }\n  return (\n    <>\n      <h1>Login</h1>\n      <div>\n        <input\n          id=\"username\"\n          type=\"text\"\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          value={username}\n        ></input>\n      </div>\n      <div>\n        <input\n          id=\"password\"\n          type=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          value={password}\n        ></input>\n      </div>\n      <button onClick={() => login()}>Submit</button>\n      {error.length > 0 && (\n        <h3 style={{ color: \"red\" }} className=\"text-center\">\n          {error}\n        </h3>\n      )}\n      <p>\n        Create an account <u>here</u>.\n      </p>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  setUser,\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n// props.setUser(username);\n// let user = { username: username, password: password}\n//  fetch(\"/users/signup\")\n//    method: \"POST\"\",\n// headers: { \"Content-Type\": \"application/json\" },\n// body: JSON.stringify(user),\n// })\n// .then((res) => res.json())\n//.then((json) => console.log(json))\n// history.push(\"/search\";)\n","import React, { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"../redux/actions\";\nimport axios from \"axios\";\n\nconst SignupPage = (props) => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  async function signup() {\n    setError(\"\");\n    if (\n      username.length < 8 ||\n      username.length > 16 ||\n      password.length > 20 ||\n      password.length < 8\n    ) {\n      setError(\n        \"Username must be between 8 and 16 characters and Password must be between 8 and 20 characters\"\n      );\n      return;\n    }\n    try {\n      // Try to do the fetch to the appropriate endpoint\n      // Post username and password in a body\n      // const response = await fetch(\"/users/login\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify({ username: username, password: password }),\n      // });\n      // // Check the response\n      // const json = await response.json();\n      // Handle response correctly\n      const json = await axios.post(\"/users/signup\", {\n        username: username,\n        password: password,\n      });\n      console.log(json);\n      if (json.data.error) {\n        setError(json.data.error);\n      } else {\n        props.setUser(json.data.data.username);\n        history.push(\"/search\");\n      }\n    } catch (err) {\n      setError(\"Something went wrong, please try again later.\");\n    }\n  }\n  return (\n    <>\n      <h1 className=\"text-center\">Signup</h1>\n      <div className=\"form\">\n        <div className=\"form-container\">\n          <label className=\"label text-center\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            className=\"input\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            type=\"text\"\n            id=\"username\"\n          />\n        </div>\n        <div className=\"form-container\">\n          <label className=\"label text-center\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            className=\"input\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n            id=\"password\"\n          />\n        </div>\n        <button className=\"submit\" onClick={() => signup()}>\n          Signup\n        </button>\n\n        {error.length > 0 && (\n          <h3 style={{ color: \"red\" }} className=\"text-center\">\n            {error}\n          </h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  setUser,\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\n","export const userSelector = (state) => state.user;\nexport const usernameSelector = (state) => state.user.username;\nexport const userIdSelector = (state) => state.user.id;\nexport const userRoleSelector = (state) => state.user.role;\n","import React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nfunction TextScroller ({text}) {\n  const [key, setKey] = useState(1);\n\n  const scrolling = useSpring({\n    from: { transform: \"translate(60%,0)\" },\n    to: { transform: \"translate(-60%,0)\" },\n    config: { duration: 5000 },\n    reset: true,\n    onRest: () => {\n      setKey(key + 1);\n    }\n  });\n\n  return (\n    \n    <div className=\"scroll-text\" key={key}>\n      <animated.div style={scrolling}>{text}</animated.div>\n    </div>\n  )\n  }\n\n\nexport default TextScroller;\n","import \"./App.css\";\nimport SearchPage from \"./components/SearchPage\";\nimport CatchPage from \"./components/CatchPage\";\nimport RandomPage from \"./components/RandomPage\";\nimport LinksPage from \"./components/LinksPage\";\nimport {\n  Switch,\n  Route,\n  Redirect,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport SignupPage from \"./components/SignupPage\";\nimport store from \"./redux/Store\";\nimport { PokeContext, initialState } from \"./shared/PokeContext\";\n\nimport { Provider } from \"react-redux\";\nimport { useSelectors, useActionCreators } from \"use-redux\";\nimport { usernameSelector } from \"./redux/selectors\";\nimport { clearUser, setUser } from \"./redux/actions\";\nimport TextScroller from \"./components/TextScroller\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [globalState, setGlobalState] = useState(initialState);\n  const [username] = useSelectors(usernameSelector);\n  const [clearUserFromState, setUserInState] = useActionCreators(\n    clearUser,\n    setUser\n  );\n  // make a request to the server to see if the cookie is there\n  useEffect(async () => {\n    try {\n      // const res = await fetch(\"/authenticate\");\n      // const json = await res.json();\n      const json = await axios.get(\"/users/authenticate\");\n      if (json.data.success) {\n        setUserInState(json.data.data.username);\n      }\n    } catch (err) {}\n  }, []);\n  // if not, no action required\n  // if it does, you'll get a response with a username and then log that into state\n  return (\n    // <PokeContext.PokeProvider value={[globalState, setGlobalState]}>\n\n    <Router>\n      <>\n        <nav className=\"navbar\">\n          <NavLink className=\"link\" to=\"/Login\">\n            Login\n          </NavLink>\n          <NavLink className=\"link\" to=\"/signup\">\n            Create Account\n          </NavLink>\n          <NavLink className=\"link\" to=\"/Search\">\n            Search\n          </NavLink>\n          <NavLink className=\"link\" to=\"/Catch\">\n            Box\n          </NavLink>\n          <NavLink className=\"link\" to=\"/Random\">\n            Random\n          </NavLink>\n          <NavLink className=\"link\" to=\"/Links\">\n            Links\n          </NavLink>\n        </nav>\n        <main>\n          <div className=\"App\">\n            <Switch>\n              {/* <Route path=\"/example\" component={Example} /> */}\n              <Route path=\"/login\" component={LoginPage} />\n              <Route path=\"/signup\" component={SignupPage} />\n              <Route path=\"/search\" component={SearchPage} />\n              <Route path=\"/catch\" component={CatchPage} />\n              <Route path=\"/random\" component={RandomPage} />\n              <Route path=\"/links\" component={LinksPage} />\n              <Route path=\"*\">\n                <Redirect to=\"/search\" />\n              </Route>\n            </Switch>\n          </div>\n        </main>\n        <footer className=\"f-text\">\n          sara's pokemon api\n          <TextScroller text=\"gotta catch 'em all!\" />\n        </footer>\n      </>\n    </Router>\n\n    // </PokeContext.PokeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Provider } from \"react-redux\";\nimport store from \"./redux/Store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}