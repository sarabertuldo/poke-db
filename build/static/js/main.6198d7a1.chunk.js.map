{"version":3,"sources":["redux/actions/CatchActions.js","redux/actions/UserActions.js","redux/actions/QueryActions.js","redux/actions/TypesActions.js","redux/reducers/QueryReducer.js","redux/reducers/UserReducer.js","redux/reducers/TypesReducer.js","redux/reducers/index.js","redux/reducers/CatchReducer.js","redux/Store.js","components/DisplayPage.js","components/DisplayTypes.js","components/SearchPage.js","components/CatchPage.js","components/RandomPage.js","components/LinksPage.js","components/LoginPage.js","components/SignupPage.js","shared/PokeContext.js","redux/selectors/UserSelectors.js","components/TextScroller.jsx","shared/ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_CATCH","DELETE_CATCH","addCatch","caught","type","deleteCatch","dex","SET_USER","CLEAR_USER","setUser","user","username","clearUser","SET_QUERY","SET_TYPES","initialState","role","id","typesReducer","state","action","search","rootReducer","combineReducers","query","filter","val","types","createStore","DisplayPage","pkmn","isCaught","className","name","src","img","onClick","DisplayTypes","props","console","log","useState","error","setError","pokemon","setPokemon","a","fetch","typeurl","response","json","resPkmn","sprites","front_default","useEffect","getData","url","length","mapDispatchToProps","setQuery","setTypes","connect","globalState","setName","setType","favePkmn","useMemo","map","nameLC","toLowerCase","typeLC","resPokeTypes","onChange","e","target","value","placeholder","getByName","getByType","includes","t","v","RandomPage","randomPkmn","setRandomPkmn","getRandomPkmn","axios","get","min","Math","ceil","max","floor","random","pokeId","then","data","LinksPage","href","history","useHistory","setUsername","password","setPassword","post","push","login","style","color","to","htmlFor","signup","favorites","PokeContext","React","createContext","userSelector","usernameSelector","TextScroller","text","key","setKey","scrolling","useSpring","from","transform","config","duration","reset","onRest","div","ProtectedRoute","isAuth","authRequired","component","path","redirect","App","setGlobalState","useSelectors","useActionCreators","clearUserFromState","setUserInState","success","Provider","LoginPage","SignupPage","SearchPage","CatchPage","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6198d7a1.chunk.js","sourcesContent":["export const ADD_CATCH = \"Add Catch\";\nexport const DELETE_CATCH = \"Delete Catch\";\n\nexport function addCatch(caught) {\n  return { type: ADD_CATCH, caught: caught };\n}\n\nexport function deleteCatch(dex) {\n  return { type: DELETE_CATCH, dex: dex };\n}\n","export const SET_USER = \"Set User\";\nexport const CLEAR_USER = \"Clear User\";\n\nexport function setUser(user) {\n  return { type: SET_USER, username: user };\n}\n\nexport function clearUser() {\n  return { type: CLEAR_USER };\n}\n","export const SET_QUERY = \"Set Query\";\n\nexport function setQuery(query) {\n  return { type: SET_QUERY, query: { ...query } };\n}\n","export const SET_TYPES = \"Set Types\";\n\nexport function setTypes(types) {\n  return { type: SET_TYPES, search: types };\n}\n","import { SET_QUERY } from \"../actions\";\n\nconst initialState = [];\n\nexport default function queryReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_QUERY:\n      return { ...action.query };\n    default:\n      return state;\n  }\n}\n\n// rxreducer\n","import { CLEAR_USER, SET_USER } from \"../actions\";\n\nconst initialState = {\n  username: \"\",\n  role: null,\n  id: null,\n};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, username: action.username };\n    case CLEAR_USER:\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n","import { SET_TYPES } from \"../actions\";\n\nfunction typesReducer(state = [], action) {\n  switch (action.type) {\n    case SET_TYPES:\n      return [...action.search];\n    default:\n      return state;\n  }\n}\nexport default typesReducer;\n","import catchReducer from \"./CatchReducer\";\nimport queryReducer from \"./QueryReducer\";\nimport userReducer from \"./UserReducer\";\nimport typesReducer from \"./TypesReducer\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  query: queryReducer,\n  user: userReducer,\n  caught: catchReducer,\n  types: typesReducer,\n});\n\nexport default rootReducer;\n","import { ADD_CATCH, DELETE_CATCH } from \"../actions\";\n\nexport default function catchReducer(state = [], action) {\n  switch (action.type) {\n    case ADD_CATCH:\n      return [...state, action.caught];\n    case DELETE_CATCH:\n      return state.filter((val) => val.dex !== action.dex);\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import \"./components.css\";\nimport React from \"react\";\nconst DisplayPage = ({ pkmn, isCaught, addCatch, deleteCatch }) => {\n  return (\n    <>\n      <div className=\"results-box\">\n        <div className=\"box\">\n          <h3>{pkmn.name}</h3>\n          <div className=\"pokedex-box\">Pokedex No. {pkmn.dex}</div>\n          <img src={pkmn.img} />\n          <div className=\"type-box \">{pkmn.type}</div>\n        </div>\n\n        {!isCaught && <button onClick={() => addCatch(pkmn)}> Catch</button>}\n        {isCaught && (\n          <button onClick={() => deleteCatch(pkmn.dex)}> Release</button>\n        )}\n      </div>\n    </>\n  );\n};\nexport default DisplayPage;\n","import \"./components.css\";\nimport React, { useEffect, useState } from \"react\";\nimport DisplayPage from \"./DisplayPage\";\n\nfunction DisplayTypes(props) {\n  console.log(props);\n  const [error, setError] = useState(\"\");\n  const [pokemon, setPokemon] = useState({});\n\n  useEffect(() => {\n    getData();\n  }, [props.pkmn.url]);\n  async function getData() {\n    try {\n      setError(\"\");\n      let response = await fetch(props.pkmn.typeurl);\n      let json = await response.json();\n      let resPkmn = {\n        dex: json.id,\n        name: json.name,\n        img: json.sprites.front_default,\n        type: json.types[0].type.name,\n      };\n      setPokemon(resPkmn);\n    } catch (e) {\n      setError(\"Invalid type\");\n      setPokemon({});\n    }\n  }\n\n  return (\n    <>\n      <div className=\"results-box\">\n        {/* <h3>{props.pkmn.name}</h3>\n        {props.pkmn.typeurl} */}\n        {error.length === 0 && pokemon.name && (\n          <DisplayPage\n            pkmn={pokemon}\n            isCaught={props.isCaught}\n            deleteCatch={props.deleteCatch}\n            addCatch={props.addCatch}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default DisplayTypes;\n","import React, { useMemo, useState } from \"react\";\nimport \"./components.css\";\nimport DisplayPage from \"./DisplayPage\";\nimport DisplayTypes from \"./DisplayTypes\";\nimport { setQuery } from \"../redux/actions/QueryActions\";\nimport { setTypes } from \"../redux/actions/TypesActions\";\nimport { connect } from \"react-redux\";\nimport { addCatch, deleteCatch } from \"../redux/actions\";\n\nfunction SearchPage(props) {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const favePkmn = useMemo(() => {\n    return props.caught.map((pkmn) => pkmn.name);\n  }, [props.caught]);\n\n  const url = `https://pokeapi.co/api/v2/`;\n\n  async function getByName(name) {\n    try {\n      setError(\"\");\n      let nameLC = name.toLowerCase();\n      let response = await fetch(`${url}pokemon/${nameLC}`);\n      let json = await response.json();\n\n      let resPkmn = {\n        dex: json.id,\n        name: json.name,\n        img: json.sprites.front_default,\n        type: json.types[0].type.name,\n      };\n      props.setQuery(resPkmn);\n    } catch (e) {\n      setError(\"Invalid name\");\n      props.setQuery([]);\n    }\n  }\n\n  async function getByType(type) {\n    try {\n      setError(\"\");\n      let typeLC = type.toLowerCase();\n      let response = await fetch(`${url}type/${typeLC}`);\n      let json = await response.json();\n      let resPokeTypes = json.pokemon.map((pokemon) => {\n        return { name: pokemon.pokemon.name, typeurl: pokemon.pokemon.url };\n      });\n      console.log(resPokeTypes);\n      props.setTypes(resPokeTypes);\n    } catch (e) {\n      setError(\"Invalid type\");\n      props.setTypes([]);\n    }\n  }\n\n  return (\n    <>\n      <h1>Search</h1>\n      <div>\n        <input\n          id=\"name\"\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Search By Name\"\n          value={name}\n        />\n        <button className=\"button\" onClick={() => getByName(name)}>\n          Search Name\n        </button>\n        <p className=\"text-example\">\n          (Example: Pikachu, Jigglypuff, Greninja, etc.\n        </p>\n      </div>\n\n      <div>\n        <input\n          id=\"type\"\n          type=\"text\"\n          onChange={(e) => setType(e.target.value)}\n          placeholder=\"Search By Type\"\n          value={type}\n        />\n        <button className=\"button\" onClick={() => getByType(type)}>\n          Search Type\n        </button>\n        <p className=\"text-example\">(Example: Water, Flying, Psychic, etc.)</p>\n      </div>\n\n      <div>\n        {error.length > 0 && <h1>{error}</h1>}\n        {error.length === 0 && props.pkmn.name && (\n          <DisplayPage\n            pkmn={props.pkmn}\n            dex={props.pkmn.dex}\n            img={props.pkmn.img}\n            type={props.pkmn.type}\n            isCaught={favePkmn.includes(props.pkmn.name)}\n            deleteCatch={props.deleteCatch}\n            addCatch={props.addCatch}\n          />\n        )}\n      </div>\n      <div className=\"results-box\">\n        {props.types.map((t) => {\n          return (\n            <div>\n              <DisplayTypes\n                pkmn={t}\n                isCaught={favePkmn.includes(props.pkmn.name)}\n                deleteCatch={props.deleteCatch}\n                addCatch={props.addCatch}\n              ></DisplayTypes>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nconst mapDispatchToProps = {\n  addCatch,\n  deleteCatch,\n  setQuery,\n  setTypes,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    globalState: state,\n    pkmn: state.query,\n    types: state.types,\n    caught: state.caught,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n","import \"./components.css\";\nimport React, { useState } from \"react\";\nimport { addCatch, deleteCatch } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport DisplayPage from \"./DisplayPage\";\n\nconst CatchPage = (props) => {\n  return (\n    <>\n      <h1>Box</h1>\n      {props.caught.map((v) => (\n        <DisplayPage\n          key={v.dex}\n          pkmn={v}\n          isCaught={true}\n          deleteCatch={props.deleteCatch}\n        />\n      ))}\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  addCatch,\n  deleteCatch,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    caught: state.caught,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CatchPage);\n","import \"./components.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction RandomPage() {\n  const [randomPkmn, setRandomPkmn] = useState({});\n\n  useEffect(() => {\n    getRandomPkmn();\n  }, []);\n\n  const pokeId = () => {\n    const min = Math.ceil(1);\n    const max = Math.floor(898);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const getRandomPkmn = () => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/` + pokeId())\n      .then((response) => {\n        console.log(response.data);\n        setRandomPkmn(response.data);\n      });\n  };\n\n  return (\n    <>\n      <h1>Random Encounter</h1>\n      <div className=\"random-box\">\n        <h3>{randomPkmn.name}</h3>\n        <h4>#{randomPkmn.id}</h4>\n        <img\n          src={\n            `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/` +\n            randomPkmn.id +\n            `.png`\n          }\n        />\n        <div>\n          <img\n            src={\n              `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/` +\n              +randomPkmn.id +\n              `.png`\n            }\n          />\n          <img\n            src={\n              `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/back/` +\n              +randomPkmn.id +\n              `.png`\n            }\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RandomPage;\n","import React from \"react\";\nimport \"./components.css\";\n\nfunction LinksPage() {\n  return (\n    <>\n      <h1>Links</h1>\n      <li>\n        <a href=\"http://bulbapedia.bulbagarden.net\">Bulbapedia</a>\n      </li>\n      <li>\n        <a href=\"http://pokeapi.co/\">Poke API</a>\n      </li>\n    </>\n  );\n}\n\nexport default LinksPage;\n","import React, { useState } from \"react\";\nimport \"./components.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"../redux/actions\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst LoginPage = (props) => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  async function login() {\n    setError(\"\");\n    console.log(username, password);\n    if (\n      username.length < 8 ||\n      username.length > 16 ||\n      password.length > 20 ||\n      password.length < 8\n    ) {\n      setError(\n        \"Username must be between 8 and 16 characters. Password must be between 8 and 20 characters.\"\n      );\n      return;\n    }\n    try {\n      // try to do the fetch to the appropriate endpoint\n      // post username and password in a body\n      // uncomment 32, 33, 35, 37, 40, 41, 43\n      // const response = await fetch(\"/users/login\", {\n      //   method: \"POST\",\n      // information about the request being sent\n      // headers: {\n      //   \"Content-Type\": \"application/json\",\n      // },\n      // username because of Line 9, password because of Line 10\n      // sending data as a string/making an object a string, looks like a JSON so turn it back into an object\n      //   body: JSON.stringify({ username: username, password: password }),\n      // });\n      // check the response\n      // const json = await response.json();\n      // handle response correctly\n      // comment 46-49\n      const json = axios.post(\"users/login\", {\n        username: username,\n        password: password,\n      });\n      // add .data after each json (L49, 50, 52) (ex. json.data.data.username)\n      if (json.error) {\n        setError(json.error);\n      } else {\n        props.setUser(json.data.username);\n        history.push(\"/search\");\n      }\n    } catch (error) {\n      setError(\"Something went wrong, please try again later.\");\n    }\n  }\n  return (\n    <>\n      <h1>Login</h1>\n      <div>\n        <input\n          id=\"username\"\n          type=\"text\"\n          onChange={(e) => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          value={username}\n        ></input>\n      </div>\n      <div>\n        <input\n          id=\"password\"\n          type=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          value={password}\n        ></input>\n      </div>\n      <button onClick={() => login()}>Submit</button>\n      {error.length > 0 && (\n        <h3 style={{ color: \"red\" }} className=\"text-center\">\n          {error}\n        </h3>\n      )}\n      <p>\n        Create an account <Link to=\"/signup\">here</Link>.\n      </p>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  setUser,\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n// props.setUser(username);\n// let user = { username: username, password: password}\n//  fetch(\"/users/signup\")\n//    method: \"POST\"\",\n// headers: { \"Content-Type\": \"application/json\" },\n// body: JSON.stringify(user),\n// })\n// .then((res) => res.json())\n//.then((json) => console.log(json))\n// history.push(\"/search\";)\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setUser } from \"../redux/actions\";\nimport axios from \"axios\";\n\nconst SignupPage = (props) => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  async function signup() {\n    setError(\"\");\n    if (\n      username.length < 8 ||\n      username.length > 16 ||\n      password.length > 20 ||\n      password.length < 8\n    ) {\n      setError(\n        \"Username must be between 8 and 16 characters and Password must be between 8 and 20 characters\"\n      );\n      return;\n    }\n    try {\n      // Try to do the fetch to the appropriate endpoint\n      // Post username and password in a body\n      // const response = await fetch(\"/users/login\", {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\": \"application/json\",\n      //   },\n      //   body: JSON.stringify({ username: username, password: password }),\n      // });\n      // // Check the response\n      // const json = await response.json();\n      // Handle response correctly\n      const json = await axios.post(\"/users/signup\", {\n        username: username,\n        password: password,\n      });\n      console.log(json);\n      if (json.data.error) {\n        setError(json.data.error);\n      } else {\n        props.setUser(json.data.data.username);\n        history.push(\"/search\");\n      }\n    } catch (err) {\n      setError(\"Something went wrong, please try again later.\");\n    }\n  }\n  return (\n    <>\n      <h1 className=\"text-center\">Signup</h1>\n      <div className=\"form\">\n        <div className=\"form-container\">\n          <label className=\"label text-center\" htmlFor=\"username\">\n            Username\n          </label>\n          <input\n            className=\"input\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            type=\"text\"\n            id=\"username\"\n          />\n        </div>\n        <div className=\"form-container\">\n          <label className=\"label text-center\" htmlFor=\"password\">\n            Password\n          </label>\n          <input\n            className=\"input\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type=\"password\"\n            id=\"password\"\n          />\n        </div>\n        <button className=\"submit\" onClick={() => signup()}>\n          Signup\n        </button>\n\n        {error.length > 0 && (\n          <h3 style={{ color: \"red\" }} className=\"text-center\">\n            {error}\n          </h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapDispatchToProps = {\n  setUser,\n};\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupPage);\n","import React from \"react\";\n\nexport const initialState = {\n  favorites: [],\n  search: [],\n  user: {\n    username: \"\",\n    id: null,\n    role: \"\",\n  },\n};\n\nexport const PokeContext = React.createContext(null);\n\n// const initialState = [\n//   { id: 1, caught: true, name: \"Bulbasaur\" },\n//   { id: 2, caught: false, name: \"Ivysaur\" },\n//   { id: 3, caught: true, name: \"Venusaur\" },\n//   { id: 4, caught: false, name: \"Charmander\" },\n//   { id: 5, caught: false, name: \"Charmeleon\" },\n//   { id: 6, caught: false, name: \"Charizard\" },\n//   { id: 7, caught: true, name: \"Squirtle\" },\n//   { id: 8, caught: false, name: \"Wartortle\" },\n//   { id: 9, caught: false, name: \"Blastoise\" },\n// ];\n\n// export const PokeContext = React.createContext(null);\n\n// const PokeProvider = (props) => {\n//   const pkmn = useArray(initialState);\n//   return (\n//     // props.children will have access to Provider\n//     <PokeContext.Provider value={pkmn}>{props.children}</PokeContext.Provider>\n//   );\n// };\n\n// export default PokeProvider;\n","export const userSelector = (state) => state.user;\nexport const usernameSelector = (state) => state.user.username;\nexport const userIdSelector = (state) => state.user.id;\nexport const userRoleSelector = (state) => state.user.role;\n","import React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nfunction TextScroller ({text}) {\n  const [key, setKey] = useState(1);\n\n  const scrolling = useSpring({\n    from: { transform: \"translate(60%,0)\" },\n    to: { transform: \"translate(-60%,0)\" },\n    config: { duration: 5000 },\n    reset: true,\n    onRest: () => {\n      setKey(key + 1);\n    }\n  });\n\n  return (\n    \n    <div className=\"scroll-text\" key={key}>\n      <animated.div style={scrolling}>{text}</animated.div>\n    </div>\n  )\n  }\n\n\nexport default TextScroller;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ isAuth, authRequired, component, path }) => {\n  const redirect = authRequired ? \"/login\" : \"/search\";\n\n  if ((authRequired && !isAuth) || (!authRequired && isAuth)) {\n    return <Redirect to={redirect} />;\n  }\n  return <Route path={path} component={component} />;\n};\n\nexport default ProtectedRoute;\n","import \"./App.css\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport SearchPage from \"./components/SearchPage\";\nimport CatchPage from \"./components/CatchPage\";\nimport RandomPage from \"./components/RandomPage\";\nimport LinksPage from \"./components/LinksPage\";\nimport LoginPage from \"./components/LoginPage\";\nimport SignupPage from \"./components/SignupPage\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport { PokeContext, initialState } from \"./shared/PokeContext\";\nimport { useSelectors, useActionCreators } from \"use-redux\";\nimport { usernameSelector, userSelector } from \"./redux/selectors\";\nimport { clearUser, setUser } from \"./redux/actions\";\nimport TextScroller from \"./components/TextScroller\";\nimport axios from \"axios\";\nimport ProtectedRoute from \"./shared/ProtectedRoute\";\n\nfunction App() {\n  const [globalState, setGlobalState] = useState(initialState);\n  const [username, user] = useSelectors(usernameSelector, userSelector);\n  const [clearUserFromState, setUserInState] = useActionCreators(\n    clearUser,\n    setUser\n  );\n\n  const isAuth = useMemo(() => {\n    return username.length > 0;\n  }, [user]);\n\n  // make a request to the server to see if the cookie is there\n  useEffect(async () => {\n    try {\n      // const res = await fetch(\"/authenticate\");\n      // const json = await res.json();\n      const json = await axios.get(\"/users/authenticate\");\n      if (json.data.success) {\n        setUserInState(json.data.data.username);\n      }\n    } catch (err) {}\n  }, []);\n  async function logout() {\n    try {\n      const { data } = await axios(\"/users/logout\");\n      clearUserFromState();\n    } catch (err) {\n      console.log(\"There's been an error logging you out\");\n    }\n  }\n  // if not, no action required\n  // if it does, you'll get a response with a username and then log that into state\n  return (\n    <PokeContext.Provider value={[globalState, setGlobalState]}>\n      <Router>\n        <>\n          <nav className=\"navbar\">\n            {username.length === 0 && (\n              <>\n                <NavLink className=\"link\" to=\"/Login\">\n                  Login\n                </NavLink>\n                <NavLink className=\"link\" to=\"/Signup\">\n                  Create Account\n                </NavLink>\n                <NavLink className=\"link\" to=\"/Search\">\n                  Search\n                </NavLink>\n                <NavLink className=\"link\" to=\"/Catch\">\n                  Box\n                </NavLink>\n                <NavLink className=\"link\" to=\"/Random\">\n                  Random\n                </NavLink>\n                <NavLink className=\"link\" to=\"/Links\">\n                  Links\n                </NavLink>\n              </>\n            )}\n          </nav>\n          <main>\n            <div className=\"App\">\n              <Switch>\n                <ProtectedRoute\n                  isAuth={isAuth}\n                  authRequired={false}\n                  path=\"/login\"\n                  component={LoginPage}\n                />\n                <ProtectedRoute\n                  isAuth={isAuth}\n                  authRequired={false}\n                  path=\"/signup\"\n                  component={SignupPage}\n                />\n                <ProtectedRoute\n                  isAuth={isAuth}\n                  authRequired={false}\n                  path=\"/search\"\n                  component={SearchPage}\n                />\n                <ProtectedRoute\n                  isAuth={isAuth}\n                  authRequired={false}\n                  path=\"/catch\"\n                  component={CatchPage}\n                />\n                <ProtectedRoute\n                  isAuth={isAuth}\n                  authRequired={false}\n                  path=\"/random\"\n                  component={RandomPage}\n                />\n                <ProtectedRoute\n                  isAuth={isAuth}\n                  authRequired={false}\n                  path=\"/links\"\n                  component={LinksPage}\n                />\n                <Route path=\"*\">\n                  <Redirect to=\"/login\" />\n                </Route>\n              </Switch>\n              <div className=\"button-logout\">\n                <button onClick={() => logout()}>Logout</button>\n              </div>\n            </div>\n          </main>\n          <footer className=\"f-text\">\n            sara's pokemon api\n            <TextScroller text=\"gotta catch 'em all!\" />\n          </footer>\n        </>\n      </Router>\n    </PokeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Provider } from \"react-redux\";\nimport store from \"./redux/Store\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}